#!/bin/bash

# Function to run daily digest
run_daily() {
    echo "Running daily digest generation..."
    cd projects/daily-digest; ./generate.sh
}

# Function to run newsletters digest
run_newsletters() {
    echo "Running newsletters digest generation..."
    cd projects/newsletters-digest; ./generate.sh
}

# Function to read newsletters digest
read_newsletters() {
    echo "Opening newsletters digest..."
    cd projects/newsletters-digest; ./read.sh
}

# Function to read daily digest
read_daily() {
    echo "Opening daily digest..."
    cd projects/daily-digest; ./read.sh
}

# Function to summarize youtube video
summarize_youtube() {
    if [ -z "$1" ]; then
        echo "Usage: ai youtube <youtube_url>"
        echo "Example: ai youtube https://youtu.be/dQw4w9WgXcQ"
        exit 1
    fi
    cd projects/youtube-summary; ./generate.sh "$1"
}

# Function to show interactive menu
show_menu() {
    local header_text="${1:-What are you up to?}"
    
    # Check if gum is installed and available
    if ! command -v gum &> /dev/null; then
        echo -e "\033[31mError: gum is not installed or not available in PATH\033[0m"
        echo "Please install gum from: https://github.com/charmbracelet/gum"
        exit 1
    fi

    # Show welcome banner using gum only on first run
    if [ "$header_text" = "What are you up to?" ]; then
        welcome_text=$(gum join "$(gum style --foreground 255 "Welcome to ")" "$(gum style --foreground 208 "abp")" "$(gum style --foreground 208 "AI")")
        gum style \
            --border double \
            --border-foreground 208 \
            --align center \
            --width 40 \
            --margin "1 2" \
            --padding "1 2" \
            "$welcome_text"
    fi

    # Present options
    choice=$(gum choose --cursor.foreground 208 --header.foreground 255 --item.foreground 250 --header "$header_text" "Generate Daily Digest" "Generate Newsletters Digest" "Read Daily Digest" "Read Newsletters Digest" "Summarize YouTube Video" "Exit")

    case $choice in
        "Generate Daily Digest")
            run_daily
            ;;
        "Generate Newsletters Digest")
            run_newsletters
            ;;
        "Read Daily Digest")
            read_daily
            echo
            show_menu "What's next?"
            ;;
        "Read Newsletters Digest")
            read_newsletters
            echo
            show_menu "What's next?"
            ;;
        "Summarize YouTube Video")
            youtube_url=$(gum input --placeholder "Enter YouTube URL...")
            if [ -n "$youtube_url" ]; then
                summarize_youtube "$youtube_url"
            fi
            echo
            show_menu "What's next?"
            ;;
        "Exit")
            echo "Goodbye!"
            exit 0
            ;;
    esac
}

# Handle command line arguments
case "$1" in
    "youtube")
        shift
        summarize_youtube "$*"
        ;;
    "daily")
        case "$2" in
            "digest")
                run_daily
                ;;
            "read")
                read_daily
                ;;
            *)
                echo "Usage: ai daily [digest|read]"
                echo "  digest - Generates a daily digest of activities"
                echo "  read   - Opens a daily digest from S3"
                exit 1
                ;;
        esac
        ;;
    "newsletters")
        case "$2" in
            "digest")
                run_newsletters
                ;;
            "read")
                read_newsletters
                ;;
            *)
                echo "Usage: ai newsletters [digest|read]"
                echo "  digest - Generates a digest of newsletter content"
                echo "  read   - Opens a newsletter digest from S3"
                exit 1
                ;;
        esac
        ;;
    "")
        show_menu
        ;;
    *)
        echo "Usage: ai [daily digest|daily read|newsletters digest|newsletters read|youtube <url>]"
        echo "  daily digest       - Generate daily digest"
        echo "  daily read         - Read existing daily digest"
        echo "  newsletters digest - Generate newsletters digest"
        echo "  newsletters read   - Read existing newsletters digest"
        echo "  youtube <url>      - Summarize YouTube video"
        echo "  (no args)          - Show interactive menu"
        exit 1
        ;;
esac